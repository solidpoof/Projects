// SPDX-License-Identifier: MIT

pragma solidity ^0.8.4;

import "@openzeppelin/contracts/access/Ownable.sol";

contract LITM_TypeHelper is Ownable {
  uint[] private types = [2,2,7,7,2,4,2,2,2,2,3,4,2,2,2,2,4,4,2,4,5,6,2,2,2,2,2,4,2,2,4,4,5,2,4,4,2,4,4,4,4,5,2,2,2,4,4,3,3,4,2,2,2,2,4,2,4,2,2,2,4,1,2,2,4,4,2,2,2,1,2,2,2,2,4,1,2,2,2,2,2,2,2,2,2,2,5,2,4,2,4,2,4,2,2,5,2,5,4,0,2,2,4,2,1,2,2,2,2,2,2,2,4,2,4,2,2,2,2,2,2,2,5,2,4,2,2,2,2,2,2,2,5,2,2,2,1,2,4,2,2,2,2,2,4,4,2,5,2,2,2,4,2,2,2,2,2,5,4,4,2,2,2,2,6,4,4,2,2,5,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,2,2,2,4,4,2,3,6,2,2,2,2,2,2,4,2,5,1,2,4,2,2,2,5,2,2,4,2,4,2,2,4,2,4,2,5,3,2,2,2,4,2,2,2,2,4,2,3,2,2,2,4,2,2,2,4,3,2,2,3,2,2,2,2,3,2,4,2,2,2,2,2,4,4,2,2,1,2,4,2,2,2,4,2,2,4,4,2,2,2,4,4,2,2,2,2,2,2,2,2,5,2,4,4,2,2,3,2,4,2,2,3,2,2,5,2,2,2,2,2,6,4,2,2,7,2,2,2,2,3,2,3,2,2,2,1,2,2,2,2,4,2,2,2,2,1,4,2,2,2,1,2,2,2,4,2,4,2,2,2,4,2,2,2,2,4,2,4,6,4,2,2,2,4,4,2,3,2,2,3,2,2,2,2,2,2,2,1,4,2,2,4,4,4,2,2,2,2,2,2,2,3,1,2,2,4,1,3,2,2,2,2,2,2,2,4,4,2,2,2,2,1,2,2,3,3,3,2,1,2,4,2,2,2,1,3,2,2,4,1,2,2,5,2,4,2,2,2,4,2,2,2,2,2,2,2,2,2,3,2,3,1,4,4,4,2,4,2,1,2,4,2,2,1,1,4,2,1,2,2,1,4,2,1,4,4,2,3,2,2,1,2,4,2,5,2,1,4,2,4,7,2,1,4,4,6,2,4,2,4,5,1,4,2,2,2,2,2,2,2,2,2,2,4,2,2,4,2,4,4,2,2,2,4,5,4,4,2,4,2,2,2,2,2,3,2,2,4,4,2,2,2,2,2,6,2,3,2,2,2,4,2,2,2,2,4,4,4,2,2,2,4,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,3,2,2,2,2,4,2,2,4,1,2,1,2,4,2,6,2,2,3,4,2,2,2,2,2,2,2,2,4,5,4,2,2,4,4,2,2,4,2,4,4,4,4,4,2,2,4,4,4,5,2,2,1,4,1,2,2,2,2,2,6,2,2,2,2,2,1,2,4,5,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2,2,3,2,2,1,2,2,2,2,2,2,2,4,2,2,2,2,2,2,3,6,6,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,6,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,4,2,4,2,4,2,2,2,2,2,3,2,2,2,5,2,2,2,3,2,2,2,2,1,2,4,2,2,2,2,4,0,4,5,4,2,2,2,2,2,0,2,2,2,4,2,1,2,2,2,2,2,2,2,5,4,4,2,4,2,2,4,2,2,2,5,4,3,2,2,1,1,2,2,2,2,5,2,2,2,4,2,2,2,2,2,2,2,1,2,2,5,2,2,2,4,5,4,2,2,2,2,2,2,2,2,2,2,2,2,2,5,4,4,2,1,2,2,2,2,2,4,2,2,2,2,2,2,4,5,1,1,2,2,2,2,2,2,4,2,1,2,2,3,3,2,2,2,2,2,3,2,2,0,5,2,2,2,2,2,2,2,2,2,2,2,2,4,2,1,2,1,2,2,4,2,2,2,2,2,3,3,2,2,2,2,2,2,2,0,3,5,2,2,2,2,2,2,2,2,2,2,1,2,2,4,2,2,2,2,2,2,1,2,2,3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,1,5,2,2,2,3,4,4,4,4,4,2,3,2,2,2,3,2,3,2,5,2,2,2,2,2,2,3,2,2,3,2,2,3,2,2,2,2,2,2,2,2,1,2,2,4,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,3,2,2,2,4,2,2,3,2,2,2,4,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,2,2,2,2,5,2];

  function typeOf(uint tokenId) public view returns (uint) {
    return types[tokenId - 1];
  }

  function setTypes(uint[] memory _types) external onlyOwner {
    types = _types;
  }
}